---
name: release

on:
  push:
    # branches:
    #   - develop
    # tags:
    #   - "v*"

jobs:
  build:
    name: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type:
          - "linux-amd64"
          - "linux-arm64"
          - "osx-amd64"
          - "osx-arm64"
        include:
          - os: linux-amd64
            goos: linux
            arch: amd64
          - os: linux-arm64
            goos: linux
            arch: arm64
          - os: osx-amd64
            goos: darwin
            arch: amd64
          - os: osx-arm64
            goos: darwin
            arch: arm64
    steps:
      - uses: actions/checkout@v3
      - id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      - name: Lookup Go cache directory
        id: go-cache
        run: |
          echo "dir=$(go env GOCACHE)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        env:
          BASE_CACHE_KEY: "${{ github.job }}-${{ runner.os }}-\
            go${{ steps.setup-go.outputs.go-version }}-"
        with:
          path: |
            ${{ steps.go-cache.outputs.dir }}
          key: "${{ env.BASE_CACHE_KEY }}\
            ${{ hashFiles('go.mod') }}-\
            ${{ hashFiles('go.sum') }}"
          restore-keys: |
            ${{ env.BASE_CACHE_KEY }}
      - name: Mkdir releases
        run: mkdir releases
      - name: Build ${{ matrix.os }}
        run: go build -o releases/cpa-tasks-${{ matrix.os }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.arch }}
      - name: Upload to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: releases
          path: releases/*
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download to artifacts
        uses: actions/download-artifact@v3
        with:
          name: releases
          path: releases/*
      - name: Upload Archives to Release
        env:
          UPLOAD_URL: ${{ github.event.release.upload_url }}
          API_HEADER: "Accept: application/vnd.github.v3+json"
          AUTH_HEADER: "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        run: |
          UPLOAD_URL=$(echo -n $UPLOAD_URL | sed s/\{.*//g)
          for FILE in releases/*
          do
            echo "Uploading ${FILE}";
            curl \
              -H "${API_HEADER}" \
              -H "${AUTH_HEADER}" \
              -H "Content-Type: $(file -b --mime-type ${FILE})" \
              --data-binary "@${FILE}" \
              "${UPLOAD_URL}?name=$(basename ${FILE})";
          done
